***** Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que se puede abrir con Wireshark. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

  * Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
    * ¿Cuántos paquetes componen la captura?
    954 paquetes.
    * ¿Cuánto tiempo dura la captura?
    56 segundos, casi un minuto.
    * ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
    Se ha efectuado la captura en 192.168.1.34, se sabe porque aparece (bien como origen o como destino) en todos los paquetes. Es privada porque está dentro del rango de direcciones privadas de la clase c (192.168.0.0-192.168.255.255).

  * Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
    * ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando de una aplicación que transmite en tiempo real?
    Es mayor el porcentaje de UDP (96.2 frente al 2.1 de TCP). Tiene sentido porque el protocolo RTP, que es el mayoritario en este tipo de comunicaciones, va dentro de UDP.
    * ¿Qué otros protocolos podemos ver en la jerarquía de protocolos? ¿Cuales crees que son señal y cuales ruido?
    Podemos ver STUN, SIP, RTP, RTCP, DNS, HTTP, ICMP y ARP. Todos son señal excepto ICMP y ARP.

  * Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
    * Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
    Tienen lugar en los segundos 7, 14, 16, 38, 39 y 55.
    * Y los paquetes con RTP, ¿cuándo se envían?
    Se envían del segundo 17 al 38 (con un silencio en el segundo 22).

  [Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

  * Analiza las dos primeras tramas de la captura.
    * ¿Qué servicio es el utilizado en estas tramas?
    Se utiliza DNS, se busca la dirección ip de Ekiga.
    * ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
    Es 80.58.61.250.
    * ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
    Devuelve la dirección 86.64.162.35.

  * A continuación, hay más de una docena de tramas TCP/HTTP.
    * ¿Podrías decir la URL que se está pidiendo?
    Se está pidiendo la URL "http://ekiga.net/ip/".
    * ¿Qué user agent (UA) la está pidiendo?
    Ekiga.
    * ¿Qué devuelve el servidor?
    Devuelve en un HTTP 200 OK texto: "83.36.48.212"
    * Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
    Lo que recibimos es nuestra dirección IP pública.

  * Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
    * ¿Por qué se hace uso de este protocolo?
    Para establecer una comunicación UDP entre dos hosts que se encuentren tras enrutadores NAT.
    * ¿Podrías decir si estamos tras un NAT o no?
    Sí porque en caso contrario no se habría necesitado usar STUN. Ya se podía intuir por tener la dirección privada.

  * La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
    * ¿Qué dirección IP tiene el servidor Registrar?
    86.64.162.35
    * ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
    5060
    * ¿Qué método SIP utiliza el UA para registrarse?
    El método REGISTER.
    * Además de REGISTER, ¿podrías decir qué instrucciones SIP entiende el UA?
    INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE

  [Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

  * Fijémonos en las tramas siguientes a la número 46:
    * ¿Se registra con éxito en el primer intento?
    No, consigue registrarse con éxito al segundo intento.
    * ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    Se puede saber mirando lo que responde el servidor, en este caso en el primer intento devuelve un "401 Unauthorized" y en el segundo un "200 OK".
    * ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
    El primero no incluía el campo Authorization con la información de autenticación. Esta información se la ha dado el servidor en el mensaje de denegación de registro.
    * ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
    3600 segundos.

  * Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
    * ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
    Sí, en el campo From.
    * ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
    Contiene la información de la sesión, usando SDP.
    * ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
    No porque se le responde con un mensaje 407 Proxy Authentication Required.
    * ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
    En que esta vez sí incluye la información del Proxy. Esta información se le facilita el servidor en el mensaje de error 407.

  * Una vez conectado, estudia el intercambio de tramas.
    * ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
    Se utilizan RTP, H.261, RTCP y ARP. RTP sirve para transmisión de información en tiempo real, como en este caso una llamada, H.261 para comprimir audio y video, RTCP envía mensajes de control durante las sesiones de RTP y ARP para encontrar la deirección ethernet que corresponde a una dirección IP mandando "preguntas" a broadcast.
    * ¿Cuál es el tamaño de paquete de los mismos?
    Los paquetes de RTP son de 214 bytes, H.261 son variables, RTCP 102 bytes y ARP 42 la pregunta y 60 la respuesta.
    * ¿Se utilizan bits de padding?
    No, en el campo Padding pone False.
    * ¿Cuál es la periodicidad de los paquetes (en origen; nota que la captura es en destino)?
    Unos 20 ms.
    * ¿Cuántos bits/segundo se envían?
    64 Kbits/s

  [Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

  * Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
    * ¿Cuántos flujos hay? ¿por qué?
    Hay 2 flujos, se manda audio (al puerto 5010) y video (al 5014).
    * ¿Cuántos paquetes se pierden?
    No se pierden paquetes.
    * ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
    1290.444 para el audio y 1290.479 para el video. El delta es la latencia o lo que se tarda en enviar un paquete.
    * ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Crees que estamos ante una conversación de calidad?
    Para el audio el máximo es 119.635 y el  medio 42.50 y para el video el máximo 183.096 y el medio 153.240. El jitter es la variación del retardo. La conversación no es de buena calidad porque hay un jitter bastante alto y variable.

  * Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
    * ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
    Ambos valen 0.
    * ¿Podemos saber si éste es el primer paquete que nos han enviado?
    Sí porque es el de menor sequence number.
    * Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
    Hasta el 247.
    * ¿A qué se debe el cambio tan brusco del jitter?
    A que también tiene un delta muy grande (cambio en la velocidad de transmisión).
    * ¿Es comparable el cambio en el valor de jitter con el del delta? ¿Cual es más grande?
    El del delta es  un cambio mucho mayor (530 de diferencia frente a 33 del jitter).

  * En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Play Streams.
    * ¿Cuánto dura la conversación?
    24 segundos.
    * ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    Son 0xbf4afd37 y 0x43306582. Uno es el del audio y otro el del video. No hay CSRCs.

  * Identifica la trama donde se finaliza la conversación.
    * ¿Qué método SIP se utiliza?
    El método BYE.
    * ¿En qué trama(s)?
    En laS TRAMAS 924, 925, 927 Y 933.
    * ¿Por qué crees que se envía varias veces?
    Porque tarda en llegar la respuesta.

  * Finalmente, se cierra la aplicación de VozIP.
    * ¿Por qué aparece una instrucción SIP del tipo REGISTER?
    Para darse de baja del servidor registrar.
    * ¿En qué trama sucede esto?
    En la 950 y en la 952.
    * ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
    Se diferencia en que ahora el valor de expires es 0.

  [Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

***** Captura de una sesión SIP

  * Dirígete a la web de Linphone (https://www.linphone.org/freesip/home) con el navegador y créate una cuenta SIP.  Recibirás un correo electrónico de confirmación en la dirección que has indicado al registrarte (mira en tu carpeta de spam si no es así).
  
  * Lanza linphone, y configúralo con los datos de la cuenta que te acabas de crear. Para ello, puedes ir al menú ``Ayuda'' y seleccionar ``Asistente de Configuración de Cuenta''. Al terminar, cierra completamente linphone.

  * Captura una sesión SIP de una conversación con el número SIP sip:music@sip.iptel.org. Recuerda que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso.

  * Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
    * ¿Se utilizan DNS y STUN? ¿Por qué?
    DNS se utiliza para saber el nombre de la máquina. Hay dos paquetes que son preguntas de STUN pero sin respuestas.
    * ¿Son diferentes el registro y la descripción de la sesión?
    Cambia el nombre sip.

  * Identifica las diferencias existentes entre esta conversación y la conversación anterior:
    * ¿Cuántos flujos tenemos?
    Hay 2 flujos.
    * ¿Cuál es su periodicidad?
    20 ms también.
    * ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
    Los delta máximos son 26.424 y 39.995 respectivamente. Los jitter medios son 0.319 y 5.336 y los máximos 1.185 y 8.039.
    * ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
    No se puede, al darle a Play Streams, aparece vacía la gráfica y no se reproduce nada.
    * ¿Sabrías decir qué tipo de servicio ofrece sip:music@iptel.org?
    Se reproduce música.

  [Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

  * Filtra por los paquetes SIP de la captura y guarda *únicamente* los paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitLab]

IMPORTANTE: No olvides rellenar el test de la práctica 5 en el Aula Virtual de la asignatura.
